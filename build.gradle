buildscript {
    ext.kotlin_version = '1.0.2'

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.openjdk.jmh:jmh-generator-annprocess:1.11.3'
    }
}

plugins {
    id 'me.champeau.gradle.jmh' version '0.2.0'
    id 'com.madvay.tools.build.gitbuildinfo' version '0.1.5-alpha'
}

apply plugin: 'idea'    //needed for jmh to work
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'antlr'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'com.madvay.tools.build.gitbuildinfo'
apply plugin: 'me.champeau.gradle.jmh'

sourceCompatibility = 1.7
group = "com.github.sybila"
archivesBaseName = "ode-generator"
version = '0.10.0'

//antlr config
generateGrammarSource {
    arguments += [
            "-no-visitor",
            "-listener",
            "-package", "com.github.sybila.ode.antlr"
    ]
    outputDirectory = new File('src/main/gen/com/github/sybila/ode/antlr')
}

// make the Java compile task depend on the antlr4 task
compileKotlin.dependsOn generateGrammarSource

// add the generated source files to the list of java sources
sourceSets.main.java.srcDirs += new File('src/main/gen')

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.intellij:annotations:5.1'
    compile 'com.github.sybila:ctl-model-checker:1.1.0'
    compile files('libs/mpj.jar')
    compile files('libs/com.microsoft.z3.jar')
    antlr "org.antlr:antlr4:4.5.1-1"
}

//create a single Jar with all dependencies
task fullJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'ODE State Space Generator',
                'Implementation-Version': version
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

jacoco {
    toolVersion = "0.7.5.201505241946"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

buildStamp {
    // The git commit SHA will be appended to this url to generate the final url.
    repoBaseUrl "https://github.com/sybila/ode-generator/tree/"
    // BuildInfo.java will be added under this package, in a
    // generated build/ directory.
    packageName "com.github.sybila.ode"
}

//set memory limit for tests - travis has some strict RAM restrictions, can't afford to exceed this
tasks.withType(Test) {
    maxHeapSize = "3072m"
    jvmArgs "-Xmx3072m"
}